version: '3.9'

services:
  intro:
    build:
      context: .
      dockerfile: .Dockerfile
      args:
        - DEBUG=True
    ports:
      - "8000:8000"
    volumes:
      - ".:/intro"
    depends_on:
      - db
      - redis
      - celery
      - prometheus
      - grafana
    command: sh -c "python manage.py runserver 0.0.0.0:8000"

  prometheus:
    image: prom/prometheus
    restart: 'no'
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    network_mode: host
  
  grafana:
    image: grafana/grafana
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
    restart: 'no'
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    network_mode: host
  
  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - db:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
  
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    image: madefire/chordtest
    command: ['celery', 'worker', '-A', 'app.app', '-l', 'info']
    environment:
      - BROKER_URL=redis://redis:6379/0
      - RESULT_BACKEND=redis://redis:6379/0
      - C_FORCE_ROOT=true
    volumes:
      - ./:/app/
    depends_on:
      - redis

volumes:
    prometheus_data: {}
