version: '3.9'

services:
  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
    network_mode: host

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server
    volumes:
      - redis:/data
    network_mode: host
  
  celery:
    build: .
    restart: always
    command: celery -A config worker -l info
    volumes:
      - .:/app
    depends_on:
      - redis
    network_mode: host

  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    network_mode: host

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    restart: unless-stopped
    network_mode: host

  intro:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DEBUG=True
    command: sh -c python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/intro
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - celery
      - prometheus
      - grafana
    network_mode: host

volumes:
  db: {}
  redis: {}
  prometheus_data: {}
  grafana_data: {}
